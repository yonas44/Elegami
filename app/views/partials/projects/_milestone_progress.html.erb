<div class="bg-white px-10 py-10 flex-col" data-project-target="milestoneWindow" data-name="progress" data-tasks='<%= milestone.tasks.to_json %>'>
  <turbo-frame id="<%= milestone.id %>">
    <div class="flex justify-between items-center mb-6">
      <div>
        <h2 class="text-2xl font-semibold"><%= milestone.title %></h2>
        <p class="text-gray-500">Summary of Milestone Details</p>
      </div>
      <div class="flex items-center space-x-2">
        <span class="text-green-500 italic text-lg">
          <%= milestone.status || 'Not-started' %>
        </span>
      </div>
    </div>
    <div class="flex justify-between">
      <div class="w-1/2 pr-6">
        <div class="mb-4">
          <p class="text-gray-500">Total Tasks</p>
          <h3 class="text-3xl font-semibold text-blue-500">
            <%= milestone.tasks.count %>
          </h3>
        </div>
        <div class="mb-4">
          <p class="text-gray-500">Milestone Due Date</p>
          <p class="text-lg font-semibold">
            <%= milestone.due_date&.strftime('%B %d, %Y') || '-' %>
          </p>
        </div>
      </div>
      <div class="w-1/3">
        <canvas id="myChart" class="w-full h-auto"></canvas>
      </div>
    </div>
    <div>
      <%= button_to edit_milestone_path(milestone), method: :get do %>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="#008000" class="w-5 h-5 cursor-pointer">
          <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125" />
        </svg>
      <% end %>
    </div>
  </turbo-frame>
</div>
<script>
  var tasksData = JSON.parse(document.querySelector('[data-name="progress"]').getAttribute('data-tasks'));

  var generateData = () => {
    let status = {
      completed: 0,
      in_progress: 0,
      on_review: 0,
      unassigned: 0
    }

    tasksData.forEach(item => {
      status[item.status] += 1;
    })
    return [status.completed, status.in_progress, status.on_review, status.unassigned]
  }
  var data = {
    labels: [
      'Completed',
      'In Progress',
      'On Review',
      'Unassigned'
    ],
    datasets: [{
      data: generateData(),
      backgroundColor: [
        'rgb(46, 204, 113)',
        'rgb(52, 152, 219)',
        'rgb(155, 89, 182)',
        'rgb(165, 165, 165)',
      ],
      hoverOffset: 4
    }]
  };

  var ctx = document.getElementById('myChart');
  var myChart = new Chart(ctx, {
    type: 'doughnut',
    data: data,
    options: {
      responsive: true,
      aspectRatio: 1,
      legend: {
        display: false // This will hide the legend
      }
    }
  });
</script>
